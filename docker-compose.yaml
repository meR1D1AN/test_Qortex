services:
  db:
    container_name: db_qortex
    image: postgres:17.6
    restart: unless-stopped
    env_file:
      - .env
    expose:
      - "${POSTGRES_PORT}"
    volumes:
      - qortex_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      retries: 5
      timeout: 10s
    networks:
      - qortex

  api:
    container_name: api_qortex
    build: .
    restart: unless-stopped
    ports:
      - "${PORT_API}:${PORT_API}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app:cached
      - static_data:/app/static
    env_file:
      - .env
    command: >
      sh -c "python3 manage.py collectstatic --noinput &&
             python3 manage.py makemigrations --noinput &&
             python3 manage.py migrate &&
             python3 manage.py test_data &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --preload"
    networks:
      - qortex

  nginx:
    image: nginx:1.29.1
    container_name: nginx_qortex
    restart: unless-stopped
    ports:
      - "${PORT_NGINX}:${PORT_NGINX}"
    depends_on:
      - api
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/app/static
    networks:
      - qortex

networks:
  qortex:
    driver: bridge

volumes:
  qortex_data:
  static_data: